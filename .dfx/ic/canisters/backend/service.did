type DayDataEntry = record { on_this_day : opt OnThisDay; notes : vec Note };
type HttpHeader = record { value : text; name : text };
type HttpResponse = record {
  status : nat;
  body : blob;
  headers : vec HttpHeader;
};
type Note = record { id : nat; content : text; is_completed : bool };
type OnThisDay = record { title : text; year : text; wiki_link : text };
type Result = variant { Ok : text; Err : text };
type TransformArgs = record { context : blob; response : HttpResponse };
service : {
  add_note : (text, text) -> (Result);
  complete_note : (text, nat) -> ();
  fetch_and_store_on_this_day : (text) -> (Result);
  get_day_data : (text) -> (opt DayDataEntry) query;
  get_month_data : (nat, nat) -> (vec record { text; DayDataEntry }) query;
  transform : (TransformArgs) -> (HttpResponse) query;
}
